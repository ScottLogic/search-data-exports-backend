version: 2.1
jobs:
  terraform-validate:
    docker:
      - image: hashicorp/terraform:light
    working_directory: ~/repo/aws-infrastructure
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: terraform init
          command: terraform init
      - run:
          name: terraform validate
          command: terraform validate
  serverless-build:
    docker:
      - image: circleci/node:10.15.1
    working_directory: '~/repo/serverless'
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Installations
          command: npm ci
      - run:
          name: Run ESLint
          command: npm run lint
  serverless-deploy:
    docker:
      - image: circleci/node:10.15.1
    working_directory: '~/repo/serverless'
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Installations
          command: npm ci
      - run:
          name: Serverless deploy
          command: npm run deploy
      - persist_to_workspace:
          root: .
          paths:
            - env
  trigger-front-end-build:
    docker:
      - image: byrnedo/alpine-curl
    working_directory: '~/repo/serverless'
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Inject REACT_APP_API_URL env variable
          command: |
            curl -X POST --user ${UPDATE_FRONTEND_ENV_VARS_TOKEN}: \
              --data @env/update_rest_api_url.json \
              https://circleci.com/api/v1.1/project/github/ScottLogic/search-data-exports-frontend/envvar

workflows:
  version: 2
  build-deploy:
    jobs:
      - serverless-build
      - serverless-deploy:
          requires:
            - serverless-build
          filters:
            branches:
              only: SDE-116-inject-env-variables
      - trigger-front-end-build:
          requires:
            - serverless-deploy
          filters:
            branches:
              only: SDE-116-inject-env-variables
